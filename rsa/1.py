from fractions import Fraction
n=9538795663851271297602738029671089878718012242935213096566250130325046936720540247534143498025477544161347330379679111765871420732255741210434736423951962189227302658997497664520929375215715960063615792480965807127438948044298348300153102760490410578638259665656608784635088735809470916136628779400145983632930861883762707606629208260803446083579674497451514650309351925430391515629898218875049677870989016071086844819626778388370764400242376469343158294638240660190754978627356076115228410162956087266527271225439142347304100660800517276772407728290414074912243665126741030948775883739544952378188264714716087909797

a123=368284101618076523549199130884422355928051525996327977632544904437878504262870825378516827225793010165434494157238379685995430409966951122729243411694569562164062815098110639750101378457641471316188502263725098231679401928494160942213175404259256770984218593245458108598930926260386443799301699336309331946341173652201791293571029025818674575198311845811957606474490230382511996537893448524426809391980637983473305318819523408854264623254226127223862150173575206444726570183096891630129244778802793476295746913846105454198627



e=251

a=19077591327702542595205476059342179757436024485870426193132500260650093873441080495068286996050955088322694660759358223531742841464511482420869472847903924378454605317994995329041858750431431920127231584961931614254877896088596696600306205520980821157276519331313217569270177471618941832273257558800291967266057799408185825199394392306374394195697993019961311696247374832761757990150416392201444079060627610573918631913438062954960835929982836033906925917632413007648356037059843552967726871763559759125837289869091638924336309932526582201350695938677991368335828814565265478203873169858685929462350511138398905572292
a=a-n-n
a=196075640660409986135975784767502028538644025058282395628670981900974958890619954451344723318649578431744942274184506178219307129498083095220609328355931687266846079805131400737270051437647584592782747418213354229728108610925547647805880482097163218511341484311783416306321402379596024705973981708966729752698
b=n
# print(a)

c=a*a-4*b

sqt=2**2*3*7*19**2*2707*207624711563653359355102443473413319722101010295233398242366198212184685659213936146571619852904134818292356647211399523515657634791399098499893832150684720241600664756380282731603217199440170278751689311591224315492847932363378314645555064219763692985258891000918081205836978220934317917040682522147

p=a+sqt
p//=2
q=a-p

mm=7303495910407762399046490836902121070389476875516762048462433039234972742941586801378979220008051262826174054961747648114128456872349675769941760630519744351742977740846748646739901172672743584989842268056810152117350241337045055812845489372389014195433916347255846499434232234822333192328886207187844781726928951986353054876826105507064928478812402103648940709131760865763234071703554208057808885564381400571862422316195578258814602362582573148358552148686182480215663291366798585241933446701357953551496955627421526567152576426417189707335038601040167826900549139608192971559659991213411381604721734898065256138516


inv=(p-1)*(q-1)
def exgcd(m,n,x,y):
	if n == 0:
		x = 1
		y = 0
		return (m,x,y)
	a1 = b = 1
	a = b1 = 0
	c = m
	d = n
	q = int(c//d)
	r = c%d
	while r:
		c = d
		d = r
		t = a1
		a1 = a
		a = t-q*a
		t = b1
		b1 = b
		b = t-q*b
		q = int(c//d)
		r = c%d
	x = a
	y = b
	return (d,x,y)
 
m = inv
n = e
ans = exgcd(m,n,0,0)
 
print("gcd(%d,%d) = %d"%(m,n,ans[0]))
print("s = %d, t = %d"%(ans[1],ans[2]))
print(ans[2]*e%inv)
s=ans[1]#-n
t=ans[2]+m
print(t*e%inv)


print(pow(mm,t,b))
m=pow(mm,t,b)
print(hex(m))

from libnum import *   
print(n2s(m))
# print(c)
# m=c
# j=0

# dec=1000000000000*10**604

# q=a//100*8+a//1000*5
# print(c-q*q)
# exit(0)

# # print(dec)
# # input()
# jj=0
# while j==0:
#     for i in range(1600):
#         q=a//100*+a//1000*i
#         # print(c-q*q)
#         if abs(c-q*q)<m:
#             m= abs(c-q*q)
#             j=i
#     dec*=10
#     jj+=1
#     print(jj)
# print()
# print(dec)
# print(m,j)



# # import decimal
# # print(a*a-4*b)
# # c=decimal.Decimal(a*a-4*b)
# # print(c)
# # c=c.sqrt()
# # print(c)
# # d=int(c)
# # print(d)


# # a=1
# # base=123
# # for e in range(1,1000):
# #     a=a*base%n
# #     print(a)
# #     if a==a123:
# #         # input()
# #         print(e)
# #         break

